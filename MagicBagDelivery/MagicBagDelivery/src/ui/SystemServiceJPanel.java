/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CompletedOrderUserComplain;
import model.CompletedOrderUserComplainList;
import model.CurrentOrderUserComplain;
import model.CurrentOrderUserComplainList;
import model.Feedbacks;
import model.OrderList;
import model.customers;
import model.markets;
import model.order;

/**
 *
 * @author evelyn
 */
public class SystemServiceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemMarketJPanel
     */
    OrderList history;
    Feedbacks fbs;
    markets mkts;
    customers ct;
    CompletedOrderUserComplainList finishedcomplain;
    CurrentOrderUserComplainList currentcomplain;
    public SystemServiceJPanel(OrderList history, Feedbacks fbs, CompletedOrderUserComplainList finishedcomplain,CurrentOrderUserComplainList currentcomplain, 
            markets mkts, customers ct) {
        initComponents();
        this.history = history;
        this.fbs = fbs;
        this.finishedcomplain = finishedcomplain;
        this.currentcomplain = currentcomplain;
        populateServiceTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btncreate = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnread = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(102, 153, 0));
        setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 153, 0));
        jLabel1.setText("Problem:");
        add(jLabel1);
        jLabel1.setBounds(30, 470, 110, 23);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 153, 0));
        jLabel2.setText("Order Number");
        add(jLabel2);
        jLabel2.setBounds(30, 390, 130, 23);
        add(jTextField1);
        jTextField1.setBounds(170, 560, 120, 23);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(170, 470, 250, 40);
        add(jTextField3);
        jTextField3.setBounds(170, 390, 120, 23);

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 153, 0));
        jLabel9.setText("Result:");
        add(jLabel9);
        jLabel9.setBounds(30, 560, 90, 23);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 153, 0));
        jLabel4.setText("Order Type:");
        add(jLabel4);
        jLabel4.setBounds(30, 430, 110, 23);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 153, 0));
        jLabel3.setText("Status:");
        add(jLabel3);
        jLabel3.setBounds(30, 520, 80, 23);

        jComboBox1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Completed", "Uncompleted" }));
        add(jComboBox1);
        jComboBox1.setBounds(170, 520, 140, 29);

        jComboBox3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delivery", "Pick-up" }));
        add(jComboBox3);
        jComboBox3.setBounds(170, 430, 130, 29);

        jTable2.setBackground(new java.awt.Color(204, 255, 204));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order Number", "Order Type", "Problem", "Status", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2);
        jScrollPane2.setBounds(40, 40, 660, 340);

        btncreate.setBackground(new java.awt.Color(204, 255, 204));
        btncreate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btncreate.setForeground(new java.awt.Color(102, 153, 0));
        btncreate.setText("Create");
        btncreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateActionPerformed(evt);
            }
        });
        add(btncreate);
        btncreate.setBounds(460, 470, 86, 29);

        btnupdate.setBackground(new java.awt.Color(204, 255, 204));
        btnupdate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(102, 153, 0));
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        add(btnupdate);
        btnupdate.setBounds(580, 470, 91, 29);

        btnread.setBackground(new java.awt.Color(204, 255, 204));
        btnread.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnread.setForeground(new java.awt.Color(102, 153, 0));
        btnread.setText("Read");
        btnread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreadActionPerformed(evt);
            }
        });
        add(btnread);
        btnread.setBounds(470, 540, 74, 29);

        btndelete.setBackground(new java.awt.Color(204, 255, 204));
        btndelete.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btndelete.setForeground(new java.awt.Color(102, 153, 0));
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        add(btndelete);
        btndelete.setBounds(580, 540, 84, 29);

        jLabel7.setFont(new java.awt.Font("Kokonor", 1, 24)); // NOI18N
        jLabel7.setText("Service Administration");
        add(jLabel7);
        jLabel7.setBounds(270, 0, 310, 50);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/picture/1-1024x1024.jpeg"))); // NOI18N
        add(jLabel5);
        jLabel5.setBounds(0, 0, 740, 630);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void btncreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateActionPerformed
        // TODO add your handling code here:
        
        for (order od: history.getHistory()){
            
            if ((od.getOrderNumber() == Integer.parseInt(jTextField3.getText())) & (od.getStatus().equals("Completed"))){
            CompletedOrderUserComplain couc = finishedcomplain.addNewCOUC();
            couc.setOrder(od);
            couc.setProblem(jTextField2.getText());
            couc.setDecision("None");
            break;
            }
        
           if ((od.getOrderNumber() == Integer.parseInt(jTextField3.getText())) & (od.getStatus().equals("In Progress"))){
            CurrentOrderUserComplain couc = currentcomplain.addNewCOUC();
            couc.setOrder(od);
            couc.setProblem(jTextField2.getText());
            couc.setDecision("None");
            break;
            }
        }
           populateServiceTable();
    }//GEN-LAST:event_btncreateActionPerformed

    private void btnreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreadActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = jTable2.getSelectedRow();
        if (SelectedRowIndex < 0){
            
            JOptionPane.showMessageDialog(this, "Please Select a Row to Read.");
            return;
    }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("Completed")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CompletedOrderUserComplain couc = (CompletedOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        
        jTextField3.setText(String.valueOf(couc.getOrder().getOrderNumber()));
        
        jComboBox3.setSelectedItem(couc.getOrder().getOrderType());
        
        jTextField2.setText(couc.getProblem());
        
        jComboBox1.setSelectedItem(couc.getOrder().getStatus());
        
        jTextField1.setText(couc.getDecision());
        }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("In Progress")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CurrentOrderUserComplain couc = (CurrentOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        
        jTextField3.setText(String.valueOf(couc.getOrder().getOrderNumber()));
        
        jComboBox3.setSelectedItem(couc.getOrder().getOrderType());
        
        jTextField2.setText(couc.getProblem());
        
        jComboBox1.setSelectedItem(couc.getOrder().getStatus());
        
        jTextField1.setText(couc.getDecision());
        }
    }//GEN-LAST:event_btnreadActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = jTable2.getSelectedRow();
        if (SelectedRowIndex < 0){
            
            JOptionPane.showMessageDialog(this, "Please Select a Row to Read.");
            return;
    }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("Completed")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CompletedOrderUserComplain couc = (CompletedOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        couc.setProblem(jTextField2.getText());
        couc.setDecision(jTextField1.getText());
        }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("Completed")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CurrentOrderUserComplain couc = (CurrentOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        couc.setProblem(jTextField2.getText());
        couc.setDecision(jTextField1.getText());
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = jTable2.getSelectedRow();
        if (SelectedRowIndex < 0){
            
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
    }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("Completed")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CompletedOrderUserComplain couc = (CompletedOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        
        finishedcomplain.deleteCOUC(couc);
        }
        if (SelectedRowIndex > 0 & (jTable2.getValueAt(SelectedRowIndex, 3)).equals("In Progress")){
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        CurrentOrderUserComplain couc = (CurrentOrderUserComplain) model.getValueAt(SelectedRowIndex, 0);
        
        currentcomplain.deleteCOUC(couc);
        }
    }//GEN-LAST:event_btndeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncreate;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnread;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void populateServiceTable() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        
        for (CompletedOrderUserComplain couc : finishedcomplain.getHistory()) {
            
            
            Object[] row = new Object[5];
            row[0] = couc;
            row[1] = couc.getOrder().getOrderType();
            row[2] = couc.getOrder().getTotalAmount();
            row[3] = couc.getProblem();
            row[4] = couc.getDecision();

            model.addRow(row);
        }
        for (CurrentOrderUserComplain couc : currentcomplain.getHistory()) {
              
            Object[] row = new Object[5];
            row[0] = couc;
            row[1] = couc.getOrder().getOrderType();
            row[2] = couc.getOrder().getTotalAmount();
            row[3] = couc.getProblem();
            row[4] = couc.getDecision();

            model.addRow(row);
        }
        
            
    }
}
